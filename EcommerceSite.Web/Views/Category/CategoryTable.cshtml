@model EcommerceSite.Web.ViewModels.CategorySearchViewModel
@{
    ViewBag.Title = "CategoryTable";
}

    <form method="post" class="form-inline mt-4">
        <div class="form-group">
            <button type="button" id="newBtn" class="btn-lg btn-info my-2 my-sm-0 mx-2">New</button>
        </div>
    </form><br />



    <table class="table table-striped">
        <thead  class="bg-info text-white text-uppercase">
            <tr>
                <th class="font-weight-bold">Category Name</th>
                <th class="font-weight-bold">Products</th>
                <th class="font-weight-bold">Images</th>
                <th class="font-weight-bold wrap-td">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Categories != null && Model.Categories.Count > 0)
            {
                foreach (var category in Model.Categories)
                {
                    <tr>
                        <td>@category.Name</td>
                        <td>
                            @category.Products.Count
                        </td>
                        <td>
                            <img src="@category.ImageURL" width="100"/>
                        </td>
                        <td class="wrap-td">
                            <button class="editBtn btn-lg btn-info mb-2" data-id="@category.ID">Edit</button>
                            <button class="deleteBtn btn-lg btn-info mb-2" data-id="@category.ID">Delete</button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="3" class="text-danger">No Categories found.</td></tr>
            }
        </tbody>
    </table>

    @*<div>
        @if (Model.Pager != null && Model.Pager.TotalPages > 1)
        {

            if (Model.Pager.CurrentPage > 1)
            {
                <button class="pageButtons" data-pageno="1">First</button>
                <button class="pageButtons" data-pageno="@(Model.Pager.CurrentPage - 1)">Previous</button>
            }

            for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
            {
                string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;

                <button class="@activeClass pageButtons" data-pageno="@page">@page</button>
            }

            if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <button class="pageButtons" data-pageno="@(Model.Pager.CurrentPage + 1)">Next</button>
                <button class="pageButtons" data-pageno="@Model.Pager.EndPage">Last</button>
            }
        }
    </div>*@



<script>
	$(".pageButtons").click(function () {
		$.ajax({
			url: '@Url.Action("CategoryTable", "Category")',
			data: {
				pageNo: $(this).attr("data-pageNo"),
				search: '@Model.SearchTerm'
			}
		})
        .done(function (response) {
        	$("#tableContiner").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});

	$("#searchBtn").click(function () {
		var searchValue = $("#searchTxt").val();

		$.ajax({
			url: '@Url.Action("CategoryTable", "Category")',//'/Category/CategoryTable',
			data: {
				search: searchValue
			}
		})
        .done(function (response) {
        	$("#tableContiner").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});

	$("#resetBtn").click(function () {
		var searchValue = '';

		$.ajax({
			url: '@Url.Action("CategoryTable", "Category")',//'/Category/CategoryTable',
			data: {
				search: searchValue
			}
		})
        .done(function (response) {
        	$("#tableContiner").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});

	$("#newBtn").click(function () {
		$.ajax({
			url: '@Url.Action("Create", "Category")',//'/Category/Create',
		})
        .done(function (response) {
        	$("#actionContainer").html(response);

        	focusAction("actionContainer");
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});

	$(".editBtn").click(function () {
		$.ajax({
			url: '@Url.Action("Edit", "Category")',
			data: {
				ID: $(this).attr('data-id')
			}
		})
        .done(function (response) {
        	$("#actionContainer").html(response);

        	focusAction("actionContainer");
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});

	$(".deleteBtn").click(function () {

		var confirmDelete = confirm("Are you sure you want to delete this category?");

		if (confirmDelete)
		{
			$.ajax({
				type: 'POST',
				url: '@Url.Action("Delete", "Category")',
				data: {
					ID: $(this).attr('data-id')
				}
			})
			.done(function (response) {
				$("#tableContainer").html(response);
			})
			.fail(function (XMLHttpRequest, textStatus, errorThrown) {
				alert("FAIL");
			});
		}
	});

</script>
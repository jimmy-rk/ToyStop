@model EcommerceSite.Web.ViewModels.FilterProductsViewModel
@{
    var defaultImageURL = "/content/images/system/placeholder-image.png";
}

<div class="pb-5">
    <p class="float-right">
        Showing @(((Model.Pager.CurrentPage - 1) * Model.Pager.PageSize) + 1 ) – @(((Model.Pager.CurrentPage - 1) * Model.Pager.PageSize) + (Model.Products.Count < Model.Pager.PageSize ? Model.Products.Count : Model.Pager.PageSize))  of @Model.Pager.TotalItems Products  @*(Model.Products.Count < Model.Pager.PageSize ? Model.Products.Count : Model.Pager.PageSize))*@
    </p>
</div>

<div class="row text-center">

    @foreach (var product in Model.Products)
    {
        var imageURL = string.IsNullOrEmpty(product.ImageURL) ? defaultImageURL : product.ImageURL;
        <div class="col-md-4  col-sm-6 col-12  text-center">
            <div class="productImg d-block mb-4 h-100 text-center">
                <img class="img-fluid img-thumbnail" src="@imageURL" alt="" />
               <span class="productAddToCart" href="#" data-id="@product.ID"><img src="~/Content/images/cart.png" /></span>
                <a class="productView" href="@Url.Action("Details", "Product", new { ID = product.ID })">Details</a>
                
                <div>
                    <strong class="text-uppercase">@product.Name</strong>
                    <div>$@product.Price</div>
                </div>
            </div>

        </div>
    }
</div><!-- /.product-content -->

@if (Model.Pager != null && Model.Pager.TotalPages > 1)
{
    <div class="product-pagination text-center clearfix">
        <ul class="flat-pagination">
            @if (Model.Pager.CurrentPage > 1)
            {
                <li class="prev">
                    <a data-href="@Url.Action("FilterProducts", "Shop", new { pageNo = Model.Pager.CurrentPage - 1, sortBy = Model.SortBy, categoryID = Model.CategoryID })" class="pageDataLink"><i class="fa fa-angle-left"></i></a>
                </li>
            }

            @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
            {
                string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;

                <li class="@activeClass"><a data-href="@Url.Action("FilterProducts", "Shop", new { pageNo = page, sortBy = Model.SortBy, categoryID = Model.CategoryID })" title="" class="pageDataLink" >@page</a></li>
            }

            @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <li><a data-href="@Url.Action("FilterProducts", "Shop", new { pageNo = Model.Pager.CurrentPage + 1, sortBy = Model.SortBy, categoryID = Model.CategoryID})" class="pageDataLink"><i class="fa fa-angle-right"></i></a></li>
            }
        </ul><!-- /.flat-pagination -->
    </div>
}

<input type="hidden" id="SearchTerm" value="@Model.SearchTerm" />
<input type="hidden" id="SortBy" value="@Model.SortBy" />
<input type="hidden" id="CategoryID" value="@Model.CategoryID" />


<script>
    $(".pageDataLink").click(function () {
        var url = $(this).attr("data-href");

        if (url != "" || url != undefined) {
            GetData(url);
        }
    });

    var products = [];
    $(".productAddToCart").click(function () {

        var existingCookieData = $.cookie('CartProducts');

        if (existingCookieData != undefined && existingCookieData != "" && existingCookieData != null) {

            products = existingCookieData.split('-');
        }
        else {
            products = [];
        }

        var productID = $(this).attr('data-id');
        
        products.push(productID);

        $.cookie('CartProducts', products.join('-'), { path: '/' });

        updateCartProducts();

        swal("Done", "Product Added to Cart!", "success");
    });



</script>

